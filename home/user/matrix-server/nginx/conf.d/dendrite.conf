# nginx/dendrite.conf
# Main domain configuration (<domain.name>)
server {
    listen 80;
    listen [::]:80;
    server_name <domain.name>;

    http2 on;

    location / {
        root /var/www/html;
        index index.html;
        try_files $uri $uri/ =404;
    }
    
    # Let's Encrypt challenge location
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    
    # Redirect HTTP to HTTPS
    return 301 https://$host$request_uri;
}


server {
    server_name <domain.name>;

    listen 443 ssl default_server;
    listen [::]:443 ssl default_server;

#    listen 8448 ssl default_server;
#    listen [::]:8448 ssl default_server;

    http2 on;

    ssl_certificate /etc/letsencrypt/live/<domain.name>/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/<domain.name>/privkey.pem;

    location ~* ^(\/_matrix|\/_synapse|\/_client) {
            proxy_pass http://dendrite:8008;
            proxy_set_header X-Forwarded-For $remote_addr;
            client_max_body_size 10M;
    }

    # These sections are required for client and federation discovery
    # (AKA: Client Well-Known URI)
    location /.well-known/matrix/client {
            return 200 '{"m.homeserver": {"base_url": "https://<domain.name>"}}';
            default_type application/json;
            add_header Access-Control-Allow-Origin *;
    }

    location /.well-known/matrix/server {
            return 200 '{"m.server": "<domain.name>:443"}';
            default_type application/json;
            add_header Access-Control-Allow-Origin *;
    }


    location / {
        root /var/www/html;
        index index.html; 
        try_files $uri $uri/ =404;
    }

    # Let's Encrypt challenge location
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    
    # Redirect HTTP to HTTPS
#    return 301 https://$host$request_uri;
}
